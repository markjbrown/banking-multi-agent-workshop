name: MultiAgentBankingPython
metadata:
    template: azd-init@1.5.1
infra:
    provider: bicep
    path: .
services:
    MCPServer:
        project: ../../mcpserver
        host: containerapp
        language: python
        docker:
            path: ./Dockerfile
    ChatServiceWebApi:
        project: ..
        host: containerapp
        language: python
        docker:
            path: ./Dockerfile
hooks:
    preprovision:
      posix:
        shell: sh
        interactive: false
        continueOnError: false
        run: |
          # Check if OWNER_EMAIL is already set in azd environment
          EXISTING_OWNER=$(azd env get-value OWNER_EMAIL 2>/dev/null || echo "")
          if [ -z "$EXISTING_OWNER" ]; then
            CURRENT_USER=$(az account show --query user.name -o tsv 2>/dev/null || echo "user@example.com")
            echo "Auto-setting OWNER_EMAIL to: $CURRENT_USER"
            azd env set OWNER_EMAIL "$CURRENT_USER"
          else
            echo "OWNER_EMAIL already set to: $EXISTING_OWNER"
          fi
      windows:
        shell: pwsh
        interactive: false
        continueOnError: false
        run: |
          # Set OWNER_EMAIL from current Azure user
          try {
            $currentUser = az account show --query user.name -o tsv
            if ($currentUser -and $currentUser.Trim() -ne "") {
              Write-Host "Setting OWNER_EMAIL to: $($currentUser.Trim())"
              azd env set OWNER_EMAIL $currentUser.Trim()
            } else {
              Write-Host "Could not get current user, setting default"
              azd env set OWNER_EMAIL "user@example.com"
            }
          } catch {
            Write-Host "Could not get current user, setting default"
            azd env set OWNER_EMAIL "user@example.com"
          }
    postdeploy:
      shell: pwsh
      continueOnError: false
      interactive: true
      run: ../azd-hooks/postdeploy.ps1
    postprovision:
      posix:
        shell: sh
        interactive: true
        continueOnError: false
        run: |
          echo "
          COSMOSDB_ENDPOINT=\"$COSMOSDB_ENDPOINT\"
          AZURE_OPENAI_ENDPOINT=\"$AZURE_OPENAI_ENDPOINT\"
          AZURE_OPENAI_EMBEDDINGDEPLOYMENTID=\"$AZURE_OPENAI_EMBEDDINGDEPLOYMENTID\"
          AZURE_OPENAI_COMPLETIONSDEPLOYMENTID=\"$AZURE_OPENAI_COMPLETIONSDEPLOYMENTID\"
          APPLICATIONINSIGHTS_CONNECTION_STRING=\"$APPLICATIONINSIGHTS_CONNECTION_STRING\"
          " > ../.env
      windows:
        shell: pwsh
        interactive: true
        continueOnError: false
        run: |
          @"
          COSMOSDB_ENDPOINT="$env:COSMOSDB_ENDPOINT"
          AZURE_OPENAI_ENDPOINT="$env:AZURE_OPENAI_ENDPOINT"
          AZURE_OPENAI_EMBEDDINGDEPLOYMENTID="$env:AZURE_OPENAI_EMBEDDINGDEPLOYMENTID"
          AZURE_OPENAI_COMPLETIONSDEPLOYMENTID="$env:AZURE_OPENAI_COMPLETIONSDEPLOYMENTID"
          APPLICATIONINSIGHTS_CONNECTION_STRING="$env:APPLICATIONINSIGHTS_CONNECTION_STRING"
          "@ | Out-File -FilePath "../.env" -Encoding UTF8